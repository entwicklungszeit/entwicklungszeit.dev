---
import { Image } from 'astro:assets';

const { testimonial } = Astro.props;

// Prepare the testimonial data for the onclick handler
const testimonialJson = JSON.stringify(testimonial).replace(/'/g, "\\'");

const MAX_CHARS = 365;
const hasLongReview = testimonial.reviewText.length > MAX_CHARS;
const reviewPreview = hasLongReview
  ? testimonial.reviewText.slice(0, MAX_CHARS).trim() + '...'
  : testimonial.reviewText;
---

<div
  class="h-full flex flex-col bg-white rounded-2xl shadow-lg p-6 md:p-8 max-w-xl mx-auto min-h-[420px] md:min-h-[480px]"
>
  <!-- Portrait -->
  <div class="flex justify-center md:justify-start mb-4">
    <Image
      src={testimonial.portraitImage.src}
      alt={testimonial.portraitImage.alt}
      class="w-24 h-24 md:w-28 md:h-28 object-cover rounded-2xl border-2 border-gray-100 shadow-sm"
      width="112"
      height="112"
    />
  </div>

  <!-- Name and Job -->
  <div class="mb-2">
    <h3
      class="font-display text-lg md:text-xl font-bold text-gray-900 leading-tight"
    >
      {testimonial.firstName}
      {testimonial.lastName}
    </h3>
    <div class="text-primary font-medium text-base md:text-lg leading-snug">
      {testimonial.jobTitle}
      {
        testimonial.company && (
          <span class="text-gray-700 font-normal">
            {' '}
            @ {testimonial.company}
          </span>
        )
      }
    </div>
  </div>

  <!-- Review Text -->
  <div class="flex-1 mt-2 mb-4">
    <p class="text-gray-700 text-base md:text-lg leading-relaxed">
      {testimonial.reviewText}
    </p>
  </div>

  <!-- Actions -->
  <div class="mt-auto flex flex-wrap gap-2">
    {
      testimonial.bio && (
        <button
          onclick={`openTestimonialModal(${testimonialJson})`}
          class="px-4 py-1.5 border-2 border-primary text-primary hover:text-secondary hover:border-secondary rounded-full text-xs font-medium transition-all duration-300 hover:shadow-lg hover:scale-105 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
        >
          BIO
        </button>
      )
    }
  </div>
</div>

<script>
  // Declare the openTestimonialModal function type on the window object
  declare global {
    interface Window {
      openTestimonialModal: (testimonial: any) => void;
    }
  }

  // Add read more functionality
  document.addEventListener('DOMContentLoaded', () => {
    const readMoreButtons = document.querySelectorAll('.read-more-btn');

    readMoreButtons.forEach(button => {
      button.addEventListener('click', () => {
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        const reviewText = button
          .closest('div')
          .parentElement.querySelector('p');
        const readMoreText = button.querySelector('.read-more-text');
        const readMoreIcon = button.querySelector(
          '.read-more-icon'
        ) as SVGElement;

        if (isExpanded) {
          // Show preview
          reviewText.textContent = reviewText.dataset.previewText;
          readMoreText.textContent = 'Mehr lesen';
          readMoreIcon.style.transform = 'rotate(0deg)';
          button.setAttribute('aria-expanded', 'false');
        } else {
          // Show full text
          reviewText.textContent = reviewText.dataset.fullText;
          readMoreText.textContent = 'Weniger anzeigen';
          readMoreIcon.style.transform = 'rotate(180deg)';
          button.setAttribute('aria-expanded', 'true');
        }
      });
    });
  });
</script>
