---
const { testimonial } = Astro.props;

// Prepare the testimonial data for the onclick handler
const testimonialJson = JSON.stringify(testimonial).replace(/'/g, "\\'");
---

<div class="p-2">
  <div
    class="bg-white rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300 p-6 h-full flex flex-col"
  >
    <div class="flex items-center mb-4">
      <img
        src={testimonial.portraitImage.src}
        alt={testimonial.portraitImage.alt}
        class="w-16 h-16 rounded-full object-cover flex-shrink-0"
        loading="lazy"
        width="64"
        height="64"
      />
      <div class="ml-4 flex-grow min-w-0">
        <h3 class="font-display text-lg font-semibold text-gray-900 truncate">
          {testimonial.firstName}
          {testimonial.lastName}
        </h3>
        <a
          href={testimonial.projectLink}
          target="_blank"
          rel="noopener noreferrer"
          class="text-sm text-primary hover:text-primary-dark font-semibold transition-colors duration-200 truncate block"
        >
          {testimonial.jobTitle}
          {
            testimonial.company && (
              <span class="block sm:inline"> @ {testimonial.company}</span>
            )
          }
        </a>
      </div>
    </div>

    <p class="text-gray-700 mb-4 flex-grow">
      {testimonial.reviewText}
    </p>

    <div class="mt-auto pt-4 border-t border-gray-100">
      {
        testimonial.bio && (
          <button
            onclick={`openTestimonialModal(${JSON.stringify(testimonial)})`}
            class="mt-4 text-primary hover:text-primary-dark font-medium text-sm inline-flex items-center"
          >
            BIO
            <svg
              class="w-4 h-4 ml-1"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 5l7 7-7 7"
              />
            </svg>
          </button>
        )
      }
    </div>
  </div>
</div>

<script>
  // Declare the openTestimonialModal function type on the window object
  declare global {
    interface Window {
      openTestimonialModal: (testimonial: any) => void;
    }
  }
</script>
