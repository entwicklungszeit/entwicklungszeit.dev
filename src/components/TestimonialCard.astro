---
const { testimonial } = Astro.props;

// Limit review text to 50 words
const reviewWordLimit = 50;
const words = testimonial.reviewText.split(' ');
const isLongReview = words.length > reviewWordLimit;
const truncatedReview = isLongReview
  ? words.slice(0, reviewWordLimit).join(' ') + '...'
  : testimonial.reviewText;

// Prepare the testimonial data for the onclick handler
const testimonialJson = JSON.stringify(testimonial).replace(/'/g, "\\'");
---

<div class="p-2">
  <div
    class="bg-white rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300 p-6 h-full flex flex-col"
  >
    <div class="flex items-center mb-4">
      <img
        src={testimonial.portraitImage.src}
        alt={testimonial.portraitImage.alt}
        class="w-16 h-16 rounded-full object-cover flex-shrink-0"
        loading="lazy"
        width="64"
        height="64"
      />
      <div class="ml-4 flex-grow min-w-0">
        <h3 class="font-display text-lg font-semibold text-gray-900 truncate">
          {testimonial.firstName}
          {testimonial.lastName}
        </h3>
        <p class="text-sm text-gray-600 truncate">
          {testimonial.jobTitle}
          {
            testimonial.company && (
              <span class="block sm:inline"> @ {testimonial.company}</span>
            )
          }
        </p>
      </div>
    </div>

    <p class="text-gray-700 mb-4 flex-grow">
      {truncatedReview}
    </p>

    <div class="mt-auto pt-4 border-t border-gray-100">
      {
        isLongReview && (
          <button
            type="button"
            onclick={`openTestimonialModal(${testimonialJson})`}
            class="text-primary hover:text-primary-dark font-semibold transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 mr-4"
          >
            Mehr erfahren
          </button>
        )
      }

      <a
        href={testimonial.projectLink}
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center text-sm text-primary hover:text-primary-dark font-semibold transition-colors duration-200"
      >
        Zum Projekt
        <svg
          class="w-4 h-4 ml-1"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
          ></path>
        </svg>
      </a>
    </div>
  </div>
</div>

<script>
  // Declare the openTestimonialModal function type on the window object
  declare global {
    interface Window {
      openTestimonialModal: (testimonial: any) => void;
    }
  }
</script>
