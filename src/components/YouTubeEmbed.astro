---
interface Props {
  videoId: string;
  title?: string;
  loading?: 'lazy' | 'eager';
  gdprCompliant?: boolean;
}

const { videoId, title = 'YouTube Video', loading = 'lazy', gdprCompliant = false } = Astro.props;

// YouTube thumbnail URL for preview - using maxresdefault for best quality, with fallback to hqdefault
const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`;
const fallbackThumbnailUrl = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;
---

<div class="youtube-embed-container" data-video-id={videoId}>
  {gdprCompliant ? (
    <>
      <!-- Blurred preview with overlay button -->
      <div class="gdpr-preview-container">
        <!-- Prefetch the thumbnail -->
        <link rel="prefetch" href={thumbnailUrl} as="image" />
        <link rel="prefetch" href={fallbackThumbnailUrl} as="image" />

        <img
          src={thumbnailUrl}
          alt={title}
          class="preview-image"
          loading="eager"
          onload="this.style.opacity='1'"
          onerror="this.src='${fallbackThumbnailUrl}'"
        />

        <!-- Modal Dialog Container -->
        <div class="modal-backdrop">
          <div class="modal-content">
            <div class="modal-text-content">
              <h3 class="modal-title">Externes Video</h3>
              <p class="modal-description">
                Dieses Video wird von YouTube bereitgestellt. Durch das Abspielen akzeptieren Sie die Datenschutzbedingungen von YouTube.
              </p>
            </div>

            <button
              class="play-button"
              aria-label="Externen Inhalt von YouTube abspielen"
              data-video-id={videoId}
              data-title={title}
            >
              <span class="button-content">
                <svg class="button-icon" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M8 5v14l11-7z" />
                </svg>
                <span class="button-text">Video abspielen</span>
              </span>
            </button>
          </div>
        </div>
      </div>

      <!-- Iframe container - iframe will be injected here after consent -->
      <div class="iframe-container"></div>
    </>
  ) : (
    <iframe
      class="youtube-iframe"
      src={`https://www.youtube-nocookie.com/embed/${videoId}?rel=0`}
      title={title}
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
      allowfullscreen
      loading={loading}></iframe>
  )}
</div>

<style>
  .youtube-embed-container {
    position: relative;
    width: 100%;
    aspect-ratio: 16 / 9;
    background: #000;
    border-radius: 12px;
    overflow: hidden;
  }

  .youtube-iframe {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    border: none;
    transition: opacity 0.6s ease-out;
  }

  .youtube-iframe.hidden {
    opacity: 0;
    pointer-events: none;
  }

  .youtube-iframe.visible {
    opacity: 1;
    pointer-events: auto;
  }

  /* GDPR Compliant Preview Styles */
  .gdpr-preview-container {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  .gdpr-preview-container.hidden {
    display: none;
  }

  .preview-image {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: blur(8px) brightness(0.7);
    opacity: 0;
    transition: opacity 0.3s ease-out;
  }

  /* Modal Dialog Styles */
  .modal-backdrop {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    z-index: 20;
  }

  .modal-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 24px;
    padding: 40px 32px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.99) 0%, rgba(249, 250, 251, 0.99) 100%);
    border-radius: 20px;
    box-shadow: 0 25px 100px rgba(0, 0, 0, 0.35),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.6);
    max-width: 90%;
    width: 100%;
    max-w: 420px;
    animation: modal-slide-up 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  @keyframes modal-slide-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .modal-text-content {
    text-align: center;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .modal-title {
    font-size: 1.375rem;
    font-weight: 700;
    color: #1f2937;
    margin: 0;
    letter-spacing: -0.5px;
  }

  .modal-description {
    font-size: 0.9375rem;
    color: #6b7280;
    line-height: 1.6;
    margin: 0;
  }

  .play-button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 16px 32px;
    background: linear-gradient(135deg, #FF0000 0%, #CC0000 100%);
    color: white;
    border: none;
    border-radius: 12px;
    cursor: pointer;
    font-weight: 700;
    font-size: 1rem;
    transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    box-shadow: 0 10px 30px rgba(255, 0, 0, 0.3),
                0 0 0 0 rgba(255, 0, 0, 0.2);
    overflow: hidden;
    min-width: 200px;
  }

  .play-button::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s ease-out;
  }

  .play-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 50px rgba(255, 0, 0, 0.4),
                0 0 0 6px rgba(255, 0, 0, 0.1);
  }

  .play-button:hover::before {
    transform: translateX(100%);
  }

  .play-button:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 15px rgba(255, 0, 0, 0.3);
  }

  .play-button:focus {
    outline: none;
    box-shadow: 0 10px 30px rgba(255, 0, 0, 0.3),
                0 0 0 8px rgba(255, 0, 0, 0.15);
  }

  .button-content {
    position: relative;
    z-index: 10;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .button-icon {
    width: 20px;
    height: 20px;
  }

  .button-text {
    font-weight: 700;
    white-space: nowrap;
  }

  .iframe-container {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.6s ease-out;
    display: block;
  }

  .iframe-container.fade-in {
    animation: fade-in-iframe 0.6s ease-out forwards;
  }

  .iframe-container iframe {
    position: absolute;
    inset: 0;
    width: 100% !important;
    height: 100% !important;
    border: none;
    display: block;
  }

  @keyframes pulse-play {
    0%, 100% {
      transform: scale(1);
      filter: drop-shadow(0 0 0 rgba(59, 130, 246, 0));
    }
    50% {
      transform: scale(1.15);
      filter: drop-shadow(0 0 20px rgba(59, 130, 246, 0.8));
    }
  }

  /* Animation for iframe fade-in */
  @keyframes fade-in-iframe {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .youtube-iframe.fade-in {
    animation: fade-in-iframe 0.6s ease-out forwards;
  }
</style>

<script>
  // GDPR Compliant YouTube Embed Interaction with LocalStorage
  const STORAGE_KEY = 'youtube-consent-accepted';

  document.addEventListener('DOMContentLoaded', () => {
    const containers = document.querySelectorAll('.youtube-embed-container');

    containers.forEach(container => {
      const previewContainer = container.querySelector('.gdpr-preview-container');
      const iframeContainer = container.querySelector('.iframe-container');
      const playButton = container.querySelector('.play-button');

      // Check if user has already given consent
      if (localStorage.getItem(STORAGE_KEY) === 'true' && iframeContainer && previewContainer) {
        // Auto-load iframe if consent was previously given
        autoLoadIframe(container, playButton);
      }
    });

    const playButtons = document.querySelectorAll('.play-button');

    playButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();

        const container = button.closest('.youtube-embed-container');
        if (!container) return;

        const previewContainer = container.querySelector('.gdpr-preview-container');
        const iframeContainer = container.querySelector('.iframe-container');

        if (previewContainer && iframeContainer) {
          // Store consent in localStorage
          localStorage.setItem(STORAGE_KEY, 'true');

          // Load the video
          loadIframe(container, button, previewContainer, iframeContainer);
        }
      });
    });
  });

  function loadIframe(container, button, previewContainer, iframeContainer) {
    // Get video data from button
    const videoId = button.getAttribute('data-video-id');
    const title = button.getAttribute('data-title');

    // Create iframe element with autoplay enabled
    const iframe = document.createElement('iframe');
    iframe.src = `https://www.youtube-nocookie.com/embed/${videoId}?rel=0&autoplay=1`;
    iframe.title = title;
    iframe.setAttribute('style', 'width: inherit; height: inherit;');
    iframe.allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture';
    iframe.setAttribute('allowfullscreen', 'true');

    // Hide preview
    previewContainer.classList.add('hidden');

    // Show and animate iframe container
    iframeContainer.classList.add('fade-in', 'visible');

    // Inject iframe into container
    iframeContainer.appendChild(iframe);
  }

  function autoLoadIframe(container, button) {
    const previewContainer = container.querySelector('.gdpr-preview-container');
    const iframeContainer = container.querySelector('.iframe-container');

    if (previewContainer && iframeContainer && button) {
      loadIframe(container, button, previewContainer, iframeContainer);
    }
  }
</script>
