---
import { benefits } from '../data/benefits';
import Badge from './ui/Badge.astro';
import Button from './ui/Button.astro';
import Section from './ui/Section.astro';

const coachingBenefits = {
  Softwareentwicklung: [
    "Clean Code & Architektur",
    "Test-Driven Development",
    "S.O.L.I.D Prinzipien",
    "Tooling & Automation"
  ],
  Führung: [
    "Agile Methoden",
    "Konfliktmanagement",
    "Mitarbeiterentwicklung",
    "Moderation"
  ],
  Kommunikation: [
    "Stakeholder Management",
    "Präsentationstechniken",
    "Rhetorik",
    "Technische Dokumentation"
  ],
  Strategie: [
    "Technologie-Roadmap",
    "Build or Buy",
    "Innovationsmanagement",
    "Prozessoptimierung"
  ],
  Kreativität: [
    "Design Thinking",
    "Problem Solving",
    "Innovation Workshops",
    "Ideation Techniken"
  ],
  Persönlichkeit: [
    "Work-Life Balance",
    "Stressmanagement",
    "Karriereplanung",
    "Personal Branding"
  ]
};

const programSteps = [
  {
    week: "Woche 1-2",
    title: "Analyse & Zielsetzung",
    description: "Wir analysieren deine aktuelle Situation, identifizieren Herausforderungen und definieren messbare Ziele für deine Entwicklung."
  },
  {
    week: "Woche 3-4",
    title: "Strategieentwicklung",
    description: "Gemeinsam erarbeiten wir einen maßgeschneiderten Plan, der deine Stärken nutzt und gezielt an Verbesserungspotentialen arbeitet."
  },
  {
    week: "Woche 5-8",
    title: "Intensive Praxisphase",
    description: "In wöchentlichen Sessions arbeiten wir an konkreten Herausforderungen und setzen neue Methoden direkt in deinem Arbeitsalltag um."
  },
  {
    week: "Woche 9-12",
    title: "Integration & Nachhaltigkeit",
    description: "Wir festigen das Gelernte, evaluieren die Fortschritte und entwickeln Strategien für nachhaltigen Erfolg."
  }
];
---

<Section id="coaching" background="white">
  <div class="max-w-7xl mx-auto">
    <div class="text-center mb-16">
      <h2 class="text-4xl font-bold text-gray-900 mb-6" data-aos="fade-up">12-Wochen Coaching Programm</h2>
      <p class="text-xl text-gray-700 max-w-3xl mx-auto" data-aos="fade-up" data-aos-delay="100">
        Entwickle dich zum technischen Leader, der sowohl fachlich als auch menschlich überzeugt.
        Ein maßgeschneidertes 1:1 Coaching-Programm, das dich auf die nächste Stufe deiner Karriere bringt.
      </p>
    </div>

    <!-- Program Timeline -->
    <div class="relative mb-24 py-12 px-4">
      <!-- Background Pattern -->
      <div class="absolute inset-0 opacity-5">
        <svg class="w-full h-full" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <pattern id="timeline-grid" width="40" height="40" patternUnits="userSpaceOnUse">
              <path d="M0 40L40 0M0 0L40 40" stroke="currentColor" stroke-width="0.5" fill="none"/>
            </pattern>
          </defs>
          <rect width="100%" height="100%" fill="url(#timeline-grid)"/>
        </svg>
      </div>

      <!-- Gradient Overlay -->
      <div class="absolute inset-0 bg-gradient-to-b from-white via-transparent to-white"></div>

      <!-- Timeline Line -->
      <div class="absolute left-4 lg:left-1/2 top-0 bottom-0 w-0.5 bg-gradient-to-b from-primary to-secondary opacity-20 transform lg:-translate-x-px"></div>

      <!-- Timeline Steps -->
      <div class="relative space-y-12">
        {programSteps.map((step, index) => (
          <div
            class={`relative pl-12 lg:pl-0 group ${
              index % 2 === 0 ? 'lg:pr-1/2' : 'lg:pl-1/2'
            }`}
            data-aos={index % 2 === 0 ? "fade-right" : "fade-left"}
            data-aos-delay={index * 100}
          >
            <!-- Timeline Marker -->
            <div class="absolute left-0 lg:left-1/2 -translate-x-[15px] lg:-translate-x-[11px] top-0">
              <div class="w-[22px] h-[22px] bg-white rounded-full border-4 border-primary shadow-lg
                         group-hover:scale-125 transition-transform duration-300"></div>

              <!-- Pulse effect for last item -->
              {index === programSteps.length - 1 && (
                <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 -z-10">
                  <div class="w-10 h-10 bg-gradient-to-br from-primary to-secondary rounded-full opacity-10 animate-pulse"></div>
                </div>
              )}
            </div>

            <!-- Content -->
            <div class={`lg:w-[calc(50%-3rem)] ${
              index % 2 === 0
                ? 'lg:mr-auto lg:text-right'
                : 'lg:ml-auto lg:text-left'
            }`}>
              <div class="p-6 bg-white/50 rounded-xl backdrop-blur-sm border border-gray-100 shadow-sm
                         hover:shadow-md hover:bg-white/80 transition-all duration-300">
                <span class="inline-block px-3 py-1 rounded-full text-sm font-medium bg-primary/10 text-primary mb-3">
                  {step.week}
                </span>
                <h4 class="text-xl font-medium text-gray-900 mb-2">{step.title}</h4>
                <p class="text-gray-600 leading-relaxed">{step.description}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Benefits Grid -->
    <div
      class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16"
      data-aos="fade"
      data-aos-duration="400"
      data-aos-easing="ease-out-cubic"
      data-aos-offset="100"
    >
      {Object.entries(coachingBenefits).map(([category, items], index) => {
        const benefit = benefits.find(b => b.text === category);
        return (
          <div
            class="bg-white rounded-xl shadow-lg p-6 transition-all duration-300"
          >
            <div class="mb-4">
              <Badge
                text={category}
                color={benefit.color}
                textColor={benefit.textColor}
              />
            </div>
            <ul class="space-y-2 mt-4">
              {items.map(item => (
                <li class="flex items-center text-gray-700">
                  <svg class="w-5 h-5 text-primary mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                  </svg>
                  {item}
                </li>
              ))}
            </ul>
          </div>
        );
      })}
    </div>

    <!-- CTA Section -->
    <div
      class="text-center p-8 rounded-2xl bg-gradient-to-r from-gray-900 to-gray-800 text-white relative overflow-hidden"
      data-aos="fade-up"
    >
      <!-- Decorative elements -->
      <div class="absolute inset-0 opacity-10">
        <div class="absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,_rgba(255,255,255,0.2),transparent)]"></div>
        <svg class="absolute left-0 top-0 h-full w-full" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <pattern id="grid" width="32" height="32" patternUnits="userSpaceOnUse">
              <path d="M0 32V0h32" fill="none" stroke="white" stroke-width="0.5" opacity="0.2"/>
            </pattern>
          </defs>
          <rect width="100%" height="100%" fill="url(#grid)"/>
        </svg>
      </div>

      <div class="relative">
        <h3 class="text-3xl font-bold mb-4">Hast du Themen, in denen du wachsen möchtest?</h3>
        <p class="text-xl text-gray-300 mb-8 max-w-2xl mx-auto">

Lass uns in einem kurzen Video-Call herausfinden, ob ich dich dabei unterstützen kann. Du erzählst mir von deinen Zielen, und ich zeige dir, wie ich helfen kann. Am Ende entscheidest du, ob wir gemeinsam durchstarten. Ich freue mich auf diese spannende Reise mit dir!
        </p>
        <Button
          href="https://calendar.app.google/taxMeha9m5wC17S19"
          target="_blank"
          rel="noopener noreferrer"
          size="lg"
          variant="gradient"
        >
          Ja, lass uns sprechen
          <svg class="w-5 h-5 ml-2 transform transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </Button>
      </div>
    </div>
  </div>
</Section>

<style>
  /* Other styles remain */

  /* Remove the fadeInCard animation */
  .transform {
    transform-style: preserve-3d;
    backface-visibility: hidden;
    will-change: transform;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 0.1;
      transform: scale(1);
    }
    50% {
      opacity: 0.15;
      transform: scale(1.3);
    }
  }

  .animate-pulse {
    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
</style>
