---
---

<button
  id="scroll-to-top"
  class="fixed bottom-8 right-8 z-50 flex items-center justify-center w-12 h-12 bg-white rounded-full shadow-lg opacity-0 translate-y-4 transition-all duration-300 hover:shadow-xl group"
  aria-label="Scroll to top"
>
  <!-- Progress Circle -->
  <svg class="absolute inset-0 w-full h-full -rotate-90">
    <circle
      class="progress-circle"
      cx="24"
      cy="24"
      r="20"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      pathLength="100"
      stroke-dasharray="100"
      stroke-dashoffset="100"
      class="text-primary/20"
    />
    <circle
      id="progress-indicator"
      cx="24"
      cy="24"
      r="20"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      pathLength="100"
      stroke-dasharray="100"
      stroke-dashoffset="100"
      class="text-primary"
    />
  </svg>

  <!-- Arrow Icon -->
  <svg 
    class="w-6 h-6 text-primary relative z-10 transition-transform duration-300 group-hover:-translate-y-1" 
    fill="none" 
    stroke="currentColor" 
    viewBox="0 0 24 24"
  >
    <path 
      stroke-linecap="round" 
      stroke-linejoin="round" 
      stroke-width="2" 
      d="M5 10l7-7m0 0l7 7m-7-7v18"
    />
  </svg>
</button>

<style>
  #scroll-to-top.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .progress-circle {
    transition: stroke-dashoffset 0.3s ease;
  }
</style>

<script>
  const scrollToTopBtn = document.getElementById('scroll-to-top');
  const progressIndicator = document.getElementById('progress-indicator');
  const heroSection = document.querySelector('section');
  let isVisible = false;

  function updateScrollProgress() {
    const windowHeight = document.documentElement.scrollHeight - window.innerHeight;
    const scrolled = window.scrollY;
    const progress = Math.min(100, (scrolled / windowHeight) * 100);
    
    if (progressIndicator) {
      progressIndicator.style.strokeDashoffset = 100 - progress;
    }

    // Show/hide button based on hero section visibility
    if (heroSection) {
      const heroBottom = heroSection.offsetTop + heroSection.offsetHeight;
      const shouldBeVisible = window.scrollY > heroBottom;

      if (shouldBeVisible !== isVisible) {
        isVisible = shouldBeVisible;
        scrollToTopBtn?.classList.toggle('visible', isVisible);
      }
    }
  }

  function scrollToTop() {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  }

  scrollToTopBtn?.addEventListener('click', scrollToTop);
  window.addEventListener('scroll', updateScrollProgress);
  updateScrollProgress(); // Initial call
</script>