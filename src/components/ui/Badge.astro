---
interface Props {
  text: string;
  color: string;
  textColor: string;
  delay?: number;
}

const { text, color, textColor } = Astro.props;
---

<div class="flex items-center justify-center lg:justify-start">
  <div class="relative w-full group">
    <span
      class={`
        inline-flex items-center px-5 py-3 rounded-xl text-sm font-medium w-full
        justify-center lg:justify-start relative overflow-hidden group
        transition-all duration-300 transform hover:scale-105 shadow-md
        hover:shadow-lg focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2
        ${textColor} bg-gradient-to-r ${color}
      `}
    >
      <span class="relative z-10 flex items-center gap-2">
        <svg
          class="w-5 h-5 flex-shrink-0"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path
            fill-rule="evenodd"
            d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
            clip-rule="evenodd"></path>
        </svg>
        {text}
      </span>
      <div
        class="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent
               -translate-x-full group-hover:translate-x-full transition-transform duration-700 ease-out"
      >
      </div>
    </span>
  </div>
</div>
